# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  tags:
    - master
  only:
    - main
  stage: build
  script:
    - whoami
    - echo "Build started!"
    - cd /iogru/database-microservice
    #- echo "GITLAB_USER_NAME = $GITLAB_USER_NAME"
    - sudo git pull git@$GITLAB_USER_LOGIN.103.54.58.235:iogru/backend/database-microservice.git
    - sudo chown -R gitlab-runner /iogru
    - npm i
    - npm run build
    - echo "Build is complite."

unit-test-job:   # This job runs in the test stage.
  tags:
    - master
  only:
    - main
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 6 seconds."
    - sleep 2
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  tags:
    - master
  only:
    - main
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 1
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  tags:
    - master
  only:
    - main
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - sudo sh -c "cd /iogru/database-microservice/dist; pm2 delete database-microservice; pm2 start main.js -i 1 --name database-microservice"
    - echo "server started..."

